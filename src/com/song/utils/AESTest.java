package com.song.utils;

import org.apache.commons.io.IOUtils;
import org.junit.Test;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.util.Arrays;
import java.util.zip.GZIPInputStream;

public class AESTest {

    @Test
    public void test_aes() throws Exception {

        String key = "0123456789012345";
        String iv = "0123456789012345";

//        String data
        String data
        byte[] origin = HexUtils.hexToBytes(data);

        System.out.println(origin[0]);
        byte[] len = Arrays.copyOfRange(origin, 1, 5);
        int s = (len[0] & 0xff) << 24 | (len[1] & 0xff) << 16 | (len[2] & 0xff) << 8 | (len[3] & 0xff);
        System.out.println(s);

        byte[] cipherText = Arrays.copyOfRange(origin, 5, 5 + s);
        byte[] plainText = AESUtils.decrypt(key, iv, cipherText);

        // 解压缩
        byte[] decompress = decompress(plainText);
        System.out.println(new String(decompress));

    }

    private static byte[] decompress(byte[] contentBytes) throws Exception {
        ByteArrayOutputStream out = new ByteArrayOutputStream();
        IOUtils.copy(new GZIPInputStream(new ByteArrayInputStream(contentBytes)), out);
        return out.toByteArray();
    }

}
